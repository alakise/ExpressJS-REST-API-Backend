openapi: 3.0.0
info:
  title: Fundamental Express API
  description: API for user authentication, profile management, and role management
  version: 1.0.0

paths:
  /auth/signup:
    post:
      summary: Sign up a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstname
                - lastname
                - email
                - password
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '201':
          description: User created successfully
        '400':
          description: Bad request

  /auth/login:
    post:
      summary: Log in a user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
        '401':
          description: Unauthorized

  /user/update:
    patch:
      summary: Update user information
      tags:
        - User Management
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: User information updated successfully
        '401':
          description: Unauthorized
        '400':
          description: Bad request

  /user/delete/{id}:
    delete:
      summary: Delete a user
      tags:
        - User Management
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found

  /user/change-role:
    patch:
      summary: Change user role
      tags:
        - User Management
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - newRole
              properties:
                userId:
                  type: string
                newRole:
                  type: string
                  enum: [basic, moderator, admin]
      responses:
        '200':
          description: User role changed successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found
        '400':
          description: Bad request

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT